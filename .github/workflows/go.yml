name: Build and Deploy Golang Application

permissions:
  id-token: write  # Required for OIDC-based authentication
  contents: read   # Required for actions/checkout

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and Test Golang Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Install dependencies
        run: go get .
      - name: Build the application
        run: go build -v .
      - name: Run tests
        run: go test -v .

  prepare-ecr:
    name: Prepare ECR Repository
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::339713122183:role/github-actions-admin-aws
          role-session-name: GitHubActions
          web-identity-token-file: ${{ github.token_path }}
      - name: Upsert ECR repository
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          aws ecr describe-repositories --repository-names $REPO_NAME || aws ecr create-repository --repository-name $REPO_NAME

  docker-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: prepare-ecr
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::339713122183:role/github-actions-admin-aws
          role-session-name: GitHubActions
          web-identity-token-file: ${{ github.token_path }}
      - name: Build and push Docker image
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          IMAGE_TAG=$REPO_NAME:$GITHUB_SHA
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 339713122183.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME
          docker build -t $IMAGE_TAG .
          docker tag $IMAGE_TAG 339713122183.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_TAG
          docker push 339713122183.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_TAG
