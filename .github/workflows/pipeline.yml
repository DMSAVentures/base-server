name: Build and Deploy Base Server

permissions:
  id-token: write  # Required for OIDC-based authentication
  contents: read   # Required for actions/checkout

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and Test Golang Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Install dependencies
        run: go get .
      - name: Build the application
        run: go build -v .
      - name: Run tests
        run: go test -v .

  prepare-ecr:
    name: Prepare ECR Repository
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::339713122183:role/github-actions-admin-aws
          role-session-name: GitHubActions
          web-identity-token-file: ${{ github.token_path }}
      - name: Upsert ECR repository
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          aws ecr describe-repositories --repository-names $REPO_NAME || aws ecr create-repository --repository-name $REPO_NAME

  docker-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: prepare-ecr
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::339713122183:role/github-actions-admin-aws
          role-session-name: GitHubActions
          web-identity-token-file: ${{ github.token_path }}
      - name: Build and push Docker image
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          IMAGE_SHA_TAG="${REPO_NAME}:${{ github.sha }}"  # Tag with commit SHA
          IMAGE_LATEST_TAG="${REPO_NAME}:latest"  # Tag with "latest"
          ECR_REPO="339713122183.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME"
          
          # Authenticate with ECR
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REPO
          
          # Build the Docker image and tag it with the SHA
          docker build -t $IMAGE_SHA_TAG .
          
          # Tag the built image with the SHA in ECR
          docker tag $IMAGE_SHA_TAG "$ECR_REPO:$IMAGE_SHA_TAG"
          
          # Tag the built image with "latest" in ECR
          docker tag $IMAGE_SHA_TAG "$ECR_REPO:$IMAGE_LATEST_TAG"
          
          # Push the unique SHA tag to ECR
          docker push "$ECR_REPO:$IMAGE_SHA_TAG"
          
          # Push the "latest" tag to ECR
          docker push "$ECR_REPO:$IMAGE_LATEST_TAG"

  deploy-ecs:
      name: Deploy
      runs-on: ubuntu-latest
      needs: docker-build-and-push
      steps:
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-region: us-east-1
            role-to-assume: arn:aws:iam::339713122183:role/github-actions-admin-aws
            role-session-name: GitHubActions
            web-identity-token-file: ${{ github.token_path }}
        - name: Deploy to ECS
          run: |
            # Trigger ECS service redeployment with force flag
            aws ecs update-service --cluster ecs-cluster --service api_service --force-new-deployment --region us-east-1
